<?xml version="1.0" encoding="UTF-8"?>
<project name="salesmania" default="all">
  
  
  <property name="salesmania.properties" value="salesmania.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->

  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.zip"/>
    <include name="*.apk"/>
    <include name="*.war"/>
    <include name="*.egg"/>
    <include name="*.ear"/>
    <include name="*.ane"/>
    <include name="*.swc"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
  </patternset>
  
  <!-- JDK definitions -->
  <property name="jdk.home.1.7" value="/usr/lib/jvm/java-7-oracle"/>
  <property name="jdk.bin.1.7" value="${jdk.home.1.7}/bin"/>
  <path id="jdk.classpath.1.7">
    <fileset dir="${jdk.home.1.7}">
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/jfxrt.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.7}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.7}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.7"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.bukkit-dev.classpath">
    <pathelement location="${basedir}/lib/bukkit-dev.jar"/>
  </path>
  
  <path id="library.herochat.classpath">
    <pathelement location="${basedir}/lib/Herochat.jar"/>
  </path>
  
  <path id="library.townychat.classpath">
    <pathelement location="${basedir}/lib/TownyChat.jar"/>
  </path>
  
  <path id="library.vault.classpath">
    <pathelement location="${basedir}/lib/Vault.jar"/>
  </path>
  
  <path id="library.worldedit.classpath">
    <pathelement location="${basedir}/lib/WorldEdit.jar"/>
  </path>
  
  <path id="library.worldguard.classpath">
    <pathelement location="${basedir}/lib/WorldGuard.jar"/>
  </path>
  
  <!-- Modules -->
  
  
  <!-- Module Salesmania -->
  
  <dirname property="module.salesmania.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.salesmania" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.salesmania" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.salesmania" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.salesmania" value="${compiler.args}"/>
  
  <property name="salesmania.output.dir" value="${module.salesmania.basedir}/out/production/Salesmania"/>
  <property name="salesmania.testoutput.dir" value="${module.salesmania.basedir}/out/test/Salesmania"/>
  
  <path id="salesmania.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="salesmania.module.production.classpath">
    <path refid="${module.jdk.classpath.salesmania}"/>
    <path refid="library.bukkit-dev.classpath"/>
    <path refid="library.herochat.classpath"/>
    <path refid="library.townychat.classpath"/>
    <path refid="library.vault.classpath"/>
    <path refid="library.worldedit.classpath"/>
    <path refid="library.worldguard.classpath"/>
  </path>
  
  <path id="salesmania.runtime.production.module.classpath">
    <pathelement location="${salesmania.output.dir}"/>
    <path refid="library.bukkit-dev.classpath"/>
    <path refid="library.herochat.classpath"/>
    <path refid="library.townychat.classpath"/>
    <path refid="library.vault.classpath"/>
    <path refid="library.worldedit.classpath"/>
    <path refid="library.worldguard.classpath"/>
  </path>
  
  <path id="salesmania.module.classpath">
    <path refid="${module.jdk.classpath.salesmania}"/>
    <pathelement location="${salesmania.output.dir}"/>
    <path refid="library.bukkit-dev.classpath"/>
    <path refid="library.herochat.classpath"/>
    <path refid="library.townychat.classpath"/>
    <path refid="library.vault.classpath"/>
    <path refid="library.worldedit.classpath"/>
    <path refid="library.worldguard.classpath"/>
  </path>
  
  <path id="salesmania.runtime.module.classpath">
    <pathelement location="${salesmania.testoutput.dir}"/>
    <pathelement location="${salesmania.output.dir}"/>
    <path refid="library.bukkit-dev.classpath"/>
    <path refid="library.herochat.classpath"/>
    <path refid="library.townychat.classpath"/>
    <path refid="library.vault.classpath"/>
    <path refid="library.worldedit.classpath"/>
    <path refid="library.worldguard.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.salesmania">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.salesmania">
    <patternset refid="excluded.from.module.salesmania"/>
  </patternset>
  
  <path id="salesmania.module.sourcepath">
    <dirset dir="${module.salesmania.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.salesmania" depends="compile.module.salesmania.production,compile.module.salesmania.tests" description="Compile module Salesmania"/>
  
  <target name="compile.module.salesmania.production" description="Compile module Salesmania; production classes">
    <mkdir dir="${salesmania.output.dir}"/>
    <javac destdir="${salesmania.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.salesmania}/javac">
      <compilerarg line="${compiler.args.salesmania}"/>
      <bootclasspath refid="salesmania.module.bootclasspath"/>
      <classpath refid="salesmania.module.production.classpath"/>
      <src refid="salesmania.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.salesmania"/>
    </javac>
    
    <copy todir="${salesmania.output.dir}">
      <fileset dir="${module.salesmania.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.salesmania.tests" depends="compile.module.salesmania.production" description="compile module Salesmania; test classes" unless="skip.tests"/>
  
  <target name="clean.module.salesmania" description="cleanup module">
    <delete dir="${salesmania.output.dir}"/>
    <delete dir="${salesmania.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.salesmania" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.salesmania" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.salesmania" value="${basedir}/out/artifacts"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.Salesmania.jar" value="${artifacts.temp.dir}/Salesmania.jar"/>
  </target>

  <target name="artifact.salesmania" depends="init.artifacts, compile.module.salesmania" description="Build &#39;Salesmania&#39; artifact">
    <property name="artifact.temp.output.salesmania" value="${artifacts.temp.dir}/Salesmania"/>
    <mkdir dir="${artifact.temp.output.salesmania}"/>


      <copy file="${basedir}/resources/plugin.yml" todir="${artifact.temp.output.salesmania}/resources"/>
      <exec executable="${module.salesmania.basedir}/version.sh" outputproperty="salesmania.version"/>
      <replace file="${artifact.temp.output.salesmania}/resources/plugin.yml">
          <!--suppress AntResolveInspection -->
          <replacefilter token="${version}" value="${salesmania.version}"/>
      </replace>

    <jar destfile="${temp.jar.path.Salesmania.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${salesmania.output.dir}"/>
      <zipfileset file="${basedir}/resources/auctionQueue.yml"/>
      <zipfileset file="${basedir}/resources/config.yml"/>
      <zipfileset file="${basedir}/resources/english.yml"/>
      <zipfileset file="${basedir}/resources/french.yml"/>
      <zipfileset file="${basedir}/resources/locale.yml"/>
      <zipfileset file="${artifact.temp.output.salesmania}/resources/plugin.yml"/>
      <zipfileset file="${basedir}/resources/portuguese.yml"/>
    </jar>
    <copy file="${temp.jar.path.Salesmania.jar}" tofile="${artifact.temp.output.salesmania}/Salesmania.jar"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.salesmania" description="Build all artifacts">
    <mkdir dir="${artifact.output.salesmania}"/>
    <copy todir="${artifact.output.salesmania}">
      <fileset dir="${artifact.temp.output.salesmania}"/>
    </copy>

   <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
    <delete dir="${artifact.output.salesmania}/resources"/>
  </target>

  <target name="build" depends="build.all.artifacts"/>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>

  <target name="release" depends="init.artifacts, compile.module.salesmania">
      <property name="artifact.temp.output.salesmania" value="${artifacts.temp.dir}/Salesmania"/>
      <mkdir dir="${artifact.temp.output.salesmania}"/>


      <copy file="${basedir}/resources/plugin.yml" todir="${artifact.temp.output.salesmania}/resources"/>
      <exec executable="${module.salesmania.basedir}/version.sh" outputproperty="salesmania.version">
          <arg value="--release"/>
      </exec>
      <replace file="${artifact.temp.output.salesmania}/resources/plugin.yml">
          <!--suppress AntResolveInspection -->
          <replacefilter token="${version}" value="${salesmania.version}"/>
      </replace>

      <jar destfile="${temp.jar.path.Salesmania.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
          <zipfileset dir="${salesmania.output.dir}"/>
          <zipfileset file="${basedir}/resources/auctionQueue.yml"/>
          <zipfileset file="${basedir}/resources/config.yml"/>
          <zipfileset file="${basedir}/resources/english.yml"/>
          <zipfileset file="${basedir}/resources/french.yml"/>
          <zipfileset file="${basedir}/resources/locale.yml"/>
          <zipfileset file="${artifact.temp.output.salesmania}/resources/plugin.yml"/>
          <zipfileset file="${basedir}/resources/portuguese.yml"/>
      </jar>
      <copy file="${temp.jar.path.Salesmania.jar}" tofile="${artifact.temp.output.salesmania}/Salesmania.jar"/>
      <mkdir dir="${artifact.output.salesmania}"/>
      <copy todir="${artifact.output.salesmania}">
          <fileset dir="${artifact.temp.output.salesmania}"/>
      </copy>

      <!-- Delete temporary files -->
      <delete dir="${artifacts.temp.dir}"/>
      <delete dir="${artifact.output.salesmania}/resources"/>
  </target>

</project>